import type { AWS } from '@serverless/typescript';

import {
  hello,
  user_registration,
  user_deletion,
  user_retrival,
  user_update,
} from '@functions/index';

const serverlessConfiguration: AWS = {
  service: 'api-victor',
  frameworkVersion: '2',
  plugins: ['serverless-esbuild'],
  provider: {
    name: 'aws',
    runtime: 'nodejs14.x',
    versionFunctions: false,
    region: 'sa-east-1',
    profile: 'vini',
    apiGateway: {
      minimumCompressionSize: 1024,
      shouldStartNameWithService: true,
    },
    environment: {
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1',
      NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000',
      TableName: 'victor_users',
      Region: 'sa-east-1'
    },
    lambdaHashingVersion: '20201221',
    iam: {
      role: {
        statements: [
          {
            Effect: "Allow",
            // Resource: "arn:aws:dynamodb:${Region}:${Account}:table/victor_users",
            Resource: "arn:aws:dynamodb:sa-east-1:554676782873:table/victor_users",
            Action: [
              'dynamodb:PutItem',
              'dynamodb:DeleteItem',
              'dynamodb:GetItem',
              'dynamodb:Query',
              'dynamodb:UpdateItem',
            ]
          }
        ]
      }
    },
  },
  // import the function via paths
  functions: {
    hello,
    user_registration,
    user_deletion,
    user_retrival,
    user_update,
  },
  package: { individually: true },
  custom: {
    esbuild: {
      bundle: true,
      minify: false,
      sourcemap: true,
      exclude: ['aws-sdk'],
      target: 'node14',
      define: { 'require.resolve': undefined },
      platform: 'node',
      concurrency: 10,
    },
  },
  resources: {
    Resources: {
      AutoGeneratedTable: {
        Type: 'AWS::DynamoDB::Table',
        Properties: {
          TableName: 'victor_users',
          AttributeDefinitions: [
            {
              AttributeName: "name",
              AttributeType: 'S'
            },
            // {
            //   AttributeName: "<columnName>",
            //   AttributeType: '<type>'
            // }
          ],
          KeySchema: [
            {
              AttributeName: 'name',
              KeyType: 'HASH'
            },
            // {
            //   AttributeName: '<columnName>',
            //   KeyType: 'RANGE'
            // },
          ],
          // BillingMode: 'PAY_PER_REQUEST'
          ProvisionedThroughput: {
            ReadCapacityUnits: 1,
            WriteCapacityUnits: 1
          }
        }
      }
    }
  }
};

module.exports = serverlessConfiguration;
